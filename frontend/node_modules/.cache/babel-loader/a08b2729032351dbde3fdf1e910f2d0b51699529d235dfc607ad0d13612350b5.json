{"ast":null,"code":"import { createReducer } from \"@reduxjs/toolkit\";\nconst initialState = {};\nexport const likeReducer = createReducer(initialState, {\n  likeRequest: state => {\n    state.loading = true;\n  },\n  likeSuccess: (state, action) => {\n    state.loading = false;\n    state.message = action.payload;\n  },\n  likeFailure: (state, action) => {\n    state.loading = false;\n    state.error = action.payload;\n  },\n  addCommentRequest: state => {\n    state.loading = true;\n  },\n  addCommentSuccess: (state, action) => {\n    state.loading = false;\n    state.message = action.payload;\n  },\n  addCommentFailure: (state, action) => {\n    state.loading = false;\n    state.error = action.payload;\n  },\n  deleteCommentRequest: state => {\n    state.loading = true;\n  },\n  deleteCommentSuccess: (state, action) => {\n    state.loading = false;\n    state.message = action.payload;\n  },\n  deleteCommentFailure: (state, action) => {\n    state.loading = false;\n    state.error = action.payload;\n  },\n  clearErrors: state => {\n    state.error = null;\n  },\n  clearMessage: state => {\n    state.message = null;\n  }\n});\nexport const myPostReducer = createReducer(initialState, {\n  myPostRequest: state => {\n    state.loading = true;\n  },\n  myPostSuccess: (state, action) => {\n    state.posts = action.payload;\n  },\n  myPostFailure: (state, action) => {\n    state.loading = false;\n    state.error = action.payload;\n  },\n  clearErrors: state => {\n    state.error = null;\n  }\n});","map":{"version":3,"names":["createReducer","initialState","likeReducer","likeRequest","state","loading","likeSuccess","action","message","payload","likeFailure","error","addCommentRequest","addCommentSuccess","addCommentFailure","deleteCommentRequest","deleteCommentSuccess","deleteCommentFailure","clearErrors","clearMessage","myPostReducer","myPostRequest","myPostSuccess","posts","myPostFailure"],"sources":["C:/Users/chaitanya/OneDrive/Desktop/Full stack web apps/social media app/frontend/src/Reducers/Post.js"],"sourcesContent":["import {createReducer} from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst initialState = {};\r\n\r\nexport const likeReducer = createReducer(initialState, {\r\n    likeRequest: (state) => {\r\n        state.loading = true;\r\n    },\r\n    likeSuccess: (state, action) => {\r\n        state.loading = false;\r\n        state.message = action.payload;\r\n    },\r\n    likeFailure: (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n    },\r\n\r\n    addCommentRequest: (state) => {\r\n        state.loading = true;\r\n    },\r\n    addCommentSuccess: (state, action) => {\r\n        state.loading = false;\r\n        state.message = action.payload;\r\n    },\r\n    addCommentFailure: (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n    },\r\n    deleteCommentRequest: (state) => {\r\n        state.loading = true;\r\n    },\r\n    deleteCommentSuccess: (state, action) => {\r\n        state.loading = false;\r\n        state.message = action.payload;\r\n    },\r\n    deleteCommentFailure: (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n    },\r\n    clearErrors: (state) => {\r\n        state.error = null;\r\n    },\r\n    clearMessage: (state) => {\r\n        state.message = null;\r\n    }\r\n});\r\n\r\nexport const myPostReducer = createReducer(initialState, {\r\n    myPostRequest: (state) => {\r\n        state.loading = true;\r\n    },\r\n    myPostSuccess: (state, action) => {\r\n        state.posts = action.payload;\r\n    },\r\n    myPostFailure: (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n    },\r\n    clearErrors: (state) => {\r\n        state.error = null;\r\n    }\r\n});"],"mappings":"AAAA,SAAQA,aAAa,QAAO,kBAAkB;AAG9C,MAAMC,YAAY,GAAG,CAAC,CAAC;AAEvB,OAAO,MAAMC,WAAW,GAAGF,aAAa,CAACC,YAAY,EAAE;EACnDE,WAAW,EAAGC,KAAK,IAAK;IACpBA,KAAK,CAACC,OAAO,GAAG,IAAI;EACxB,CAAC;EACDC,WAAW,EAAEA,CAACF,KAAK,EAAEG,MAAM,KAAK;IAC5BH,KAAK,CAACC,OAAO,GAAG,KAAK;IACrBD,KAAK,CAACI,OAAO,GAAGD,MAAM,CAACE,OAAO;EAClC,CAAC;EACDC,WAAW,EAAEA,CAACN,KAAK,EAAEG,MAAM,KAAK;IAC5BH,KAAK,CAACC,OAAO,GAAG,KAAK;IACrBD,KAAK,CAACO,KAAK,GAAGJ,MAAM,CAACE,OAAO;EAChC,CAAC;EAEDG,iBAAiB,EAAGR,KAAK,IAAK;IAC1BA,KAAK,CAACC,OAAO,GAAG,IAAI;EACxB,CAAC;EACDQ,iBAAiB,EAAEA,CAACT,KAAK,EAAEG,MAAM,KAAK;IAClCH,KAAK,CAACC,OAAO,GAAG,KAAK;IACrBD,KAAK,CAACI,OAAO,GAAGD,MAAM,CAACE,OAAO;EAClC,CAAC;EACDK,iBAAiB,EAAEA,CAACV,KAAK,EAAEG,MAAM,KAAK;IAClCH,KAAK,CAACC,OAAO,GAAG,KAAK;IACrBD,KAAK,CAACO,KAAK,GAAGJ,MAAM,CAACE,OAAO;EAChC,CAAC;EACDM,oBAAoB,EAAGX,KAAK,IAAK;IAC7BA,KAAK,CAACC,OAAO,GAAG,IAAI;EACxB,CAAC;EACDW,oBAAoB,EAAEA,CAACZ,KAAK,EAAEG,MAAM,KAAK;IACrCH,KAAK,CAACC,OAAO,GAAG,KAAK;IACrBD,KAAK,CAACI,OAAO,GAAGD,MAAM,CAACE,OAAO;EAClC,CAAC;EACDQ,oBAAoB,EAAEA,CAACb,KAAK,EAAEG,MAAM,KAAK;IACrCH,KAAK,CAACC,OAAO,GAAG,KAAK;IACrBD,KAAK,CAACO,KAAK,GAAGJ,MAAM,CAACE,OAAO;EAChC,CAAC;EACDS,WAAW,EAAGd,KAAK,IAAK;IACpBA,KAAK,CAACO,KAAK,GAAG,IAAI;EACtB,CAAC;EACDQ,YAAY,EAAGf,KAAK,IAAK;IACrBA,KAAK,CAACI,OAAO,GAAG,IAAI;EACxB;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMY,aAAa,GAAGpB,aAAa,CAACC,YAAY,EAAE;EACrDoB,aAAa,EAAGjB,KAAK,IAAK;IACtBA,KAAK,CAACC,OAAO,GAAG,IAAI;EACxB,CAAC;EACDiB,aAAa,EAAEA,CAAClB,KAAK,EAAEG,MAAM,KAAK;IAC9BH,KAAK,CAACmB,KAAK,GAAGhB,MAAM,CAACE,OAAO;EAChC,CAAC;EACDe,aAAa,EAAEA,CAACpB,KAAK,EAAEG,MAAM,KAAK;IAC9BH,KAAK,CAACC,OAAO,GAAG,KAAK;IACrBD,KAAK,CAACO,KAAK,GAAGJ,MAAM,CAACE,OAAO;EAChC,CAAC;EACDS,WAAW,EAAGd,KAAK,IAAK;IACpBA,KAAK,CAACO,KAAK,GAAG,IAAI;EACtB;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}